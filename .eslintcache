[{"C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\index.js":"1","C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\App.js":"2","C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\reportWebVitals.js":"3","C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\components\\navbar.jsx":"4","C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\components\\homeScreen.jsx":"5","C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\components\\login.jsx":"6","C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\pageContext.jsx":"7","C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\components\\game.jsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":993,"mtime":1608051025100,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":9167,"mtime":1608061109946,"results":"13","hashOfConfig":"10"},{"size":6813,"mtime":1608004348901,"results":"14","hashOfConfig":"10"},{"size":1818,"mtime":1607971222025,"results":"15","hashOfConfig":"10"},{"size":91,"mtime":1607656069637,"results":"16","hashOfConfig":"10"},{"size":3632,"mtime":1608354004635,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1na3gvm",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\index.js",[],["37","38"],"C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\App.js",["39"],"import './App.css';\nimport HomeScreen from './components/homeScreen';\nimport Navbar from './components/navbar';\nimport Login from './components/login';\nimport Game from './components/game'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  BrowserRouter\n} from \"react-router-dom\";\nimport { PageContext } from './pageContext'\nimport { useState } from 'react';\n\nfunction App() {\n\nconst [value, setValue] = useState(\"HomePage\")\n  \n  return (\n    <BrowserRouter>\n    <Switch>\n    <PageContext.Provider value={{value, setValue}}>  \n    <Route exact path=\"/\" render = {props =>\n      <div className=\"App\">\n      <Navbar/>\n      <HomeScreen/>\n      </div>\n    }></Route>\n    <Route exact path=\"/login\" render= {props =>\n    <div>\n      <Login/>\n    </div>\n    }></Route>\n     <Route exact path=\"/game\" render= {props =>\n    <div className=\"App\">\n      <Navbar/>\n      <Game/>\n    </div>\n    }></Route>\n    </PageContext.Provider>\n    </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\reportWebVitals.js",[],"C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\components\\navbar.jsx",["40"],"/* eslint-disable no-use-before-define */\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n  import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n  import { faChild, faDiagnoses, faTrophy, faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\nlet style = {\r\n    navbar: {\r\n        backgroundColor: \"rgb(32, 30, 29)\",\r\n        color: 'white',\r\n        display: 'flex',\r\n        height: '6.5rem'\r\n    },\r\n    grid1: {\r\n        display: 'flex',\r\n        flex: '1',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    canvas:{\r\n        flex: \"1\",\r\n        minHeight: \"100px\",\r\n        minWidth: \"350px\",\r\n        maxHeight: \"100%\", \r\n        maxWidth: \"100%\",\r\n\r\n    },\r\n    grid2:{\r\n        flex: '1'\r\n    },\r\n    homeButton:{\r\n        flex: '1', cursor: 'pointer', transition: \"0.5s ease-in-out\",\r\n        color: \"gray\",\r\n        textShadow: \"0 0 0 transparent, 0 0 0 transparent\",\r\n        overflow: \"visible\"\r\n    },\r\n    loginButton:{\r\n        flex: '1', cursor: 'pointer', transition: \"0.5s ease-in-out\",\r\n        color: \"gray\",\r\n        textShadow: \"0 0 0 transparent, 0 0 0 transparent\",\r\n        overflow: \"visible\",\r\n        textDecoration: 'none'\r\n    },\r\n    hoverLogin:{\r\n        visibility: \"visible\",\r\n        backgroundColor: \"rgb(70, 75, 68)\",\r\n        position: \"absolute\",\r\n        color: \"white\", \r\n        top: \"100%\",\r\n        width: \"150%\",\r\n        right: \"0%\",\r\n        transition: \"all 0.5s ease-out\",\r\n        zIndex: \"2\",\r\n        border: \"1px solid white\"\r\n    },\r\n    dropdown:{\r\n        display: \"flex\",\r\n        height: \"50px\",\r\n        alignItems: 'center',\r\n        cursor: \"pointer\",\r\n        border: \"0.8px solid white\",\r\n        transition: \"all 0.5s ease-out\",\r\n        color: \"white\",\r\n        textDecoration: \"none\"\r\n    }\r\n}\r\n\r\nconst Navbar = ()=>{\r\n    const canvas = useRef(null);\r\n    const [scene, setScene] = useState(\"Scene not set\");\r\n    useEffect(()=>{\r\n        if(scene === \"Scene not set\"){\r\n\r\n    let manager = new THREE.LoadingManager();\r\n    manager.onProgress = ( item, loaded, total )=>{\r\n\r\n        console.log( item, loaded, total );\r\n\r\n    };\r\n    let obj;\r\n    const loader = new OBJLoader(manager);\r\n    loader.load( 'earth.obj', function ( object ) {\r\n        object.position.x = 0;\r\n        object.position.y = -1.5;\r\n        object.position.z = -4;\r\n        obj = object;\r\n        scene.add( obj );\r\n    } );\r\n        let height = canvas.current.clientHeight\r\n        let width = canvas.current.clientWidth\r\n        let raycaster = new THREE.Raycaster();\r\n        let mouse = new THREE.Vector2();\r\n        let pointOfIntersection = new THREE.Vector3();\r\n        let plane = new THREE.Plane(new THREE.Vector3(0, 0, 0.5), 0.5);\r\n        //const helper = new THREE.PlaneHelper( plane, 10, 0xffff00 ); DEBUGGING TO SEE THE PLANE\r\n\r\n        canvas.current.onmousemove = (e)=>{\r\n            mouse.x = ((e.clientX - canvas.current.offsetLeft) / width) *2 -1;\r\n            mouse.y = - ( (e.clientY - canvas.current.offsetTop) / height) * 2 + 1;\r\n            raycaster.setFromCamera(mouse, camera);\r\n            raycaster.ray.intersectPlane(plane, pointOfIntersection);\r\n            obj.lookAt(pointOfIntersection);       \r\n        }\r\n\r\n        const scene = new THREE.Scene();\r\n        //scene.add(helper) ONLY FOR DEBUGGING\r\n        const camera = new THREE.PerspectiveCamera(40, width / height, 1, 1500);\r\n        const renderer = new THREE.WebGLRenderer({antialias: true});\r\n        camera\r\n            .position\r\n            .set(0, 0, 4);\r\n        const color = 'white';\r\n        const intensity = 1;\r\n        const light = new THREE.DirectionalLight(color, intensity);\r\n        light\r\n            .position\r\n            .set(0, 0, 3);\r\n        scene.add(light);\r\n        scene.background = new THREE.Color(0x201E1D);\r\n  \r\n        window.addEventListener('resize', ()=>{\r\n            if(canvas.current !== null){\r\n            width = canvas.current.clientWidth\r\n            height = canvas.current.clientHeight\r\n            renderer.setSize(width, height);\r\n            camera.aspect = width / height;\r\n            camera.updateProjectionMatrix();\r\n        }\r\n        });\r\n        renderer.setSize(width, height)\r\n        canvas.current.appendChild(renderer.domElement)\r\n\r\n        const animate = ()=>{\r\n            renderer.render(scene, camera)\r\n            window.requestAnimationFrame(animate);\r\n        }\r\n        animate()\r\n        setScene(\"Scene set\")\r\n    }\r\n    }, [scene])\r\n\r\n    const homeButton = useRef(0);\r\n    const loginButton = useRef(0);\r\n    const [hoverLogin, setHoverLogin] = useState(0)\r\n    let logged = ()=>{\r\n        return(\r\n            <div style={{display: \"flex\"}}>\r\n            <div style={{display: \"grid\", alignItems:\"center\"}} >\r\n            <FontAwesomeIcon icon={faChild} />\r\n            </div>\r\n            <div style={{paddingLeft: \"2%\"}}>{localStorage.getItem('loginUser')}</div>\r\n            </div>\r\n        )\r\n    }\r\n    let notLogged = ()=>{\r\n        return(\r\n            <div>\r\n            <div style={{display: \"grid\", alignItems:\"center\"}} >\r\n            <FontAwesomeIcon icon={faChild} />\r\n            </div>            \r\n            <div style={{paddingLeft: \"2%\"}}>LOGIN</div>\r\n            </div>\r\n        )\r\n    }\r\n    const logOut = async ()=>{\r\n         localStorage.clear()\r\n        .then(()=>{\r\n            window.location.reload();\r\n        })\r\n        \r\n    }\r\n\r\n    return(\r\n        <div style={style.navbar}>\r\n            <div style={style.grid1}>\r\n                <div style={{display: \"grid\", alignItems: 'center', justifyContent: 'center'}}>\r\n                <div style={style.homeButton} ref={homeButton}\r\n                onMouseEnter={()=>{\r\n                    homeButton.current.style.textShadow = \"0 0 10px white, 0 0 50px white\"\r\n                    homeButton.current.style.color = \"white\";\r\n                }}\r\n                onMouseLeave={()=>{\r\n                    homeButton.current.style.color = \"gray\";\r\n                    homeButton.current.style.textShadow = \"0 0 0 transparent, 0 0 0 transparent\"                    \r\n                }}\r\n                >HOME</div>\r\n                </div>\r\n            </div>\r\n            <div style={style.canvas} ref={canvas}></div>\r\n            <div style={style.grid1}>\r\n                <div style={{display: \"grid\", alignItems: 'center', justifyContent: 'center', position: \"relative\"}}>\r\n                <Link\r\n                    to={localStorage.getItem('loginUser') ? \"/\" : \"/login\"}\r\n                     style={style.loginButton}\r\n                     ref={loginButton}\r\n                     onMouseEnter={()=>{\r\n                        loginButton.current.style.textShadow = \"0 0 10px white, 0 0 50px white\"\r\n                        loginButton.current.style.color = \"white\";\r\n                        setHoverLogin(1);\r\n                    }}\r\n                    onMouseLeave={()=>{\r\n                        loginButton.current.style.color = \"gray\";\r\n                        loginButton.current.style.textShadow = \"0 0 0 transparent, 0 0 0 transparent\"     \r\n                        setHoverLogin(0);               \r\n                    }}\r\n                    >{localStorage.getItem('loginUser') ? logged() : notLogged() }</Link>\r\n                 <div style={hoverLogin === 1 ? style.hoverLogin : {display: \"none\", visibility: \"hidden\"}}\r\n                  onMouseEnter={()=>setHoverLogin(1)} onMouseLeave={()=>setHoverLogin(0)}>\r\n                  <Link to={localStorage.getItem('loginUser') ? `/${localStorage.getItem('loginUser')}` : \"/login\"} style={style.dropdown} onMouseEnter={(e)=>e.currentTarget.style.backgroundColor = \"rgb(50, 30, 50)\"}\r\n                  onMouseLeave={(e)=>e.currentTarget.style.backgroundColor = \"rgb(70, 75, 68)\"}>\r\n                <FontAwesomeIcon style={{color: \"rgb(29, 146, 226)\"}} icon={faDiagnoses} />\r\n                  <div style={{paddingLeft: \"2%\"}}>Account</div>\r\n                  </Link>\r\n                  <Link to={localStorage.getItem('loginUser') ? \"/leaderboard\" : \"/login\"} style={style.dropdown} onMouseEnter={(e)=>e.currentTarget.style.backgroundColor = \"rgb(50, 30, 50)\"}\r\n                  onMouseLeave={(e)=>e.currentTarget.style.backgroundColor = \"rgb(70, 75, 68)\"}>\r\n                 <FontAwesomeIcon style={{color: \"rgb(125, 140, 40)\"}} icon={faTrophy} />\r\n                  <div style={{paddingLeft: \"2%\"}}>Leaderboard</div>\r\n                  </Link>\r\n                  <div onClick={logOut} style={style.dropdown} onMouseEnter={(e)=>e.currentTarget.style.backgroundColor = \"rgb(50, 30, 50)\"}\r\n                  onMouseLeave={(e)=>e.currentTarget.style.backgroundColor = \"rgb(70, 75, 68)\"}>\r\n                  <FontAwesomeIcon style={{color: \"rgb(125, 140, 40)\"}} icon={faSignOutAlt} />\r\n                  <div style={{paddingLeft: \"2%\"}}>Log out</div>\r\n                  </div>        \r\n                 </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\components\\homeScreen.jsx",[],"C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\components\\login.jsx",[],"C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\pageContext.jsx",[],"C:\\Users\\Laura\\Desktop\\frontendAPI\\frontendapi\\src\\components\\game.jsx",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":8,"column":20,"nodeType":"47","messageId":"48","endLine":8,"endColumn":26},{"ruleId":"45","severity":1,"message":"49","line":2,"column":10,"nodeType":"47","messageId":"48","endLine":2,"endColumn":20},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation"]